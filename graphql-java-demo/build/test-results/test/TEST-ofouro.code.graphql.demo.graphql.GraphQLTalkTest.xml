<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ofouro.code.graphql.demo.graphql.GraphQLTalkTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2020-03-27T05:54:05" hostname="MZ01-YANGJH.local" time="0.09">
  <properties/>
  <testcase name="findPersonNonExisting" classname="ofouro.code.graphql.demo.graphql.GraphQLTalkTest" time="0.019"/>
  <testcase name="createAndFindTalk" classname="ofouro.code.graphql.demo.graphql.GraphQLTalkTest" time="0.022"/>
  <testcase name="findTelkEmptyFilter" classname="ofouro.code.graphql.demo.graphql.GraphQLTalkTest" time="0.047"/>
  <system-out><![CDATA[2020-03-27 14:54:05.370  INFO 27004 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [ofouro.code.graphql.demo.graphql.GraphQLTalkTest], using SpringBootContextLoader
2020-03-27 14:54:05.370  INFO 27004 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [ofouro.code.graphql.demo.graphql.GraphQLTalkTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-03-27 14:54:05.371  INFO 27004 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [ofouro.code.graphql.demo.graphql.GraphQLTalkTest]: GraphQLTalkTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-03-27 14:54:05.372  INFO 27004 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration ofouro.code.graphql.demo.Application for test class ofouro.code.graphql.demo.graphql.GraphQLTalkTest
2020-03-27 14:54:05.373  INFO 27004 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-03-27 14:54:05.374  INFO 27004 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4ac221b8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6cd40f15, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@733d05d5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@34eda55e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6ff98d9a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@23199bd7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@389131cc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@610fa4d5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@42b96033, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2d118c90, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1cbfc7af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@8af1e1]
2020-03-27 14:54:05.392  INFO 27004 --- [    Test worker] o.c.g.demo.graphql.GraphQLTalkTest       : Response: <200,{"data":{"talks":[]}},[Content-Type:"application/json;charset=UTF-8", Content-Length:"21", Date:"Fri, 27 Mar 2020 05:54:05 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2020-03-27 14:54:05.406  INFO 27004 --- [    Test worker] o.c.g.demo.graphql.GraphQLBaseTest       : Response: <200,{"data":{"addTalk":{"id":"80","title":"GraphQL","summary":"will follow soon."}}},[Content-Type:"application/json;charset=UTF-8", Content-Length:"80", Date:"Fri, 27 Mar 2020 05:54:05 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2020-03-27 14:54:05.415  INFO 27004 --- [    Test worker] o.c.g.demo.graphql.GraphQLTalkTest       : Response: <200,{"data":{"talk":{"id":"80","title":"GraphQL","summary":"will follow soon."}}},[Content-Type:"application/json;charset=UTF-8", Content-Length:"77", Date:"Fri, 27 Mar 2020 05:54:05 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2020-03-27 14:54:05.462  INFO 27004 --- [    Test worker] o.c.g.demo.graphql.GraphQLTalkTest       : Response: <200,{"data":{"talks":[{"id":"19","title":"GraphQL - The Next API Language","summary":"Today we build most of our API’s in a RESTful way by delivering json data. This approach creates a tight and inflexible coupling between front- and back-end, and requires many client server interactions. This way of using an API on mobile devices, which are typically connected via unreliable, slow, and high latency networks, causes developers a lot of headaches. However, there is a new API kid on the block: GraphQL that solves this issues. GraphQL is a new way of specifying an API based on the demand of the API consumer. I will show you the the power of GraphQL and what you can do with GraphQL that could not be done with REST."},{"id":"20","title":"Immutable Infrastructure","summary":"he Docker slogan 'Build, Ship, and Run' advertises easy set up of immutable software builds, but it is not always that easy. Setting up immutable builds with Docker is pretty straight forward and shipping is just a matter of pushing the image to a repository. The next step is building the cloud infrastructure to run the containers. In this talk I briefly touch upon building immutable software. But the main focus of the talk will be on creating an immutable infrastructure. In this talk I will show you how to create an immutable infrastructure on AWS with Terraform. I will use a real world example to explain and show live how easy you can get micro services live on AWS and continuously apply changes to the same cloud environment"},{"id":"21","title":"Software Architecture for Developers","summary":"The software development industry has made huge leaps in recent years; with agile, lean, software craftsmanship, evolutionary design and microservices being just a few of the buzzwords we throw around. Despite this, software development teams are often more chaotic than they are self-organising, with the resulting code being more of a mess than was perhaps anticipated. Successful software projects aren’t just about good code though, and sometimes you need to step away from the IDE for a few moments to see the bigger picture. This session is about that bigger picture and is aimed at software developers who want to learn more about software architecture, technical leadership and the balance with agility. This talk will debunk some of the common myths as we look at five things every developer should know about software architecture; a guide to software architecture on modern software projects that’s pragmatic rather than academic and lightweight rather than “enterprisey”."},{"id":"22","title":"Open Source all the offentlig things! - men hvordan gjør vi det i NAV?","summary":"NAV har hatt IT-systemer i over 50 år. Kildekoden til disse systemene har vært lukket, i likhet med andre offentlige IT-systemer. Kildekoden til disse systemene bør være åpent tilgjengelig av flere årsaker; det at de er finansiert over skatteseddelen er bare en av dem. Nå åpner vi (gradvis) opp koden vår!  Open Source forutsetter kvalitet. Ikke bare i koden, men også i organisasjonen. Denne kvaliteten har ikke NAV hatt frem til nå. Denne presentasjonen handler om hvilke grep NAV har tatt det det siste året for å bli gode nok til at vi kan åpne koden vår på en forsvarlig måte. Vi vil dele erfaringer fra å bygge en moderne utviklingsorganisasjon inne i en eksisterende organisasjon. Hva har vært lett, og hva har vært vanskelig? Hva har fungert, og hva har ikke fungert?NAV har "},{"id":"23","title":"Inside a hacker's mind","summary":"The aim of this talk is to introduce you to a few latest critical vulnerabilities through practical examples and code demos. The first half of the talk will cover the two most critical vulnerabilities found in platforms previously unfathomable, namely vulnerabilities in Apache Struts and Serverless Architectures with practical examples and demos of what can happen with the exploitation of these vulnerabilities. The second half will delve deeper into the Stored/Persistent XSS Zero-day flaw, a vulnerability that allowed hackers to compromise 70,000 websites in March 2019."},{"id":"24","title":"Wrapping and Securing REST APIs with GraphQL","summary":"Your frontend developers are pushing to get started with GraphQL, but you don't have the backend capacity to migrate your existing REST APIs to GraphQL? Or you want to have a GraphQL API next to your existing endpoints that are based on REST? In this talk, I'll show how to create a Node.js/Express server that wraps existing REST APIs into one single GraphQL endpoint, while also keeping security in mind."},{"id":"25","title":"Preparing for a future Microservices journey","summary":"How can a small team handle infrastructure complexities that come with Microservices and still deliver business and user value? The short answer to that could be to build your core domain - that differentiates you from your competitors - in-house and outsource undifferentiating commodities to utility suppliers. In this talk Susanne will use Wardley Maps to visualise how the value chain can evolve when getting infrastructure components handled by different options: Going from open source software to Kubernetes' container orchestration, to Istio's service mesh and to Serverless technologies"},{"id":"26","title":"To the Moon and Back: The Technical Parts","summary":"How do you put together a live performance which runs in a browser? Come and find out! Live JS talk you through the opening performance in detail and how they built software using javascript which runs in a browser, to create an audio visual spectacular. Using APIs such as Web Audio, Web MIDI and Canvas, as well as hardware, come and learn about the technical details behind performing live with javascript!"},{"id":"27","title":"Zero Trust & The Flaming Sword of Justice","summary":"Security breaches pervade the headlines. What was seen as a rare instance just 5 years ago now seems to occupy the daily news cycle. A lot of these data breaches are made possible due to missteps and misconfigurations. There are many security issues that are introduced into website authentication mechanisms that further compound the security issues in addition to enforcing bad behavior by the end users. Security debt is a real problem for the vast majority of organizations in the world today and the attackers will utilize this to their advantage."},{"id":"28","title":"The Life of a Packet Through Istio","summary":"Istio is a service mesh for Kubernetes that offers advanced networking features. It provides intelligent routing, resiliency, and security features, so that service authors don't have to keep re-implementing them. Istio is rapidly taking off and there are great introductory talks everywhere. However in this session, we will explore precisely how it does what it does, following one brave little packet in from the internet and back out again. This will give a great insight into Istio's full power, and its fascinating architecture."},{"id":"29","title":"GraphQL is Cool","summary":"summary"},{"id":"30","title":"GraphQL is Cool","summary":"summary"},{"id":"31","title":"GraphQL is Cool","summary":"summary"},{"id":"37","title":"GraphQL","summary":"will follow soon."},{"id":"39","title":"Agile is Dead","summary":"Title is obvious."},{"id":"42","title":"Some talk","summary":"empty"},{"id":"62","title":"GraphQL - The Next API Language","summary":"Today we build most of our API’s in a RESTful way by delivering json data. This approach creates a tight and inflexible coupling between front- and back-end, and requires many client server interactions. This way of using an API on mobile devices, which are typically connected via unreliable, slow, and high latency networks, causes developers a lot of headaches. However, there is a new API kid on the block: GraphQL that solves this issues. GraphQL is a new way of specifying an API based on the demand of the API consumer. I will show you the the power of GraphQL and what you can do with GraphQL that could not be done with REST."},{"id":"63","title":"Immutable Infrastructure","summary":"he Docker slogan 'Build, Ship, and Run' advertises easy set up of immutable software builds, but it is not always that easy. Setting up immutable builds with Docker is pretty straight forward and shipping is just a matter of pushing the image to a repository. The next step is building the cloud infrastructure to run the containers. In this talk I briefly touch upon building immutable software. But the main focus of the talk will be on creating an immutable infrastructure. In this talk I will show you how to create an immutable infrastructure on AWS with Terraform. I will use a real world example to explain and show live how easy you can get micro services live on AWS and continuously apply changes to the same cloud environment"},{"id":"64","title":"Software Architecture for Developers","summary":"The software development industry has made huge leaps in recent years; with agile, lean, software craftsmanship, evolutionary design and microservices being just a few of the buzzwords we throw around. Despite this, software development teams are often more chaotic than they are self-organising, with the resulting code being more of a mess than was perhaps anticipated. Successful software projects aren’t just about good code though, and sometimes you need to step away from the IDE for a few moments to see the bigger picture. This session is about that bigger picture and is aimed at software developers who want to learn more about software architecture, technical leadership and the balance with agility. This talk will debunk some of the common myths as we look at five things every developer should know about software architecture; a guide to software architecture on modern software projects that’s pragmatic rather than academic and lightweight rather than “enterprisey”."},{"id":"65","title":"Open Source all the offentlig things! - men hvordan gjør vi det i NAV?","summary":"NAV har hatt IT-systemer i over 50 år. Kildekoden til disse systemene har vært lukket, i likhet med andre offentlige IT-systemer. Kildekoden til disse systemene bør være åpent tilgjengelig av flere årsaker; det at de er finansiert over skatteseddelen er bare en av dem. Nå åpner vi (gradvis) opp koden vår!  Open Source forutsetter kvalitet. Ikke bare i koden, men også i organisasjonen. Denne kvaliteten har ikke NAV hatt frem til nå. Denne presentasjonen handler om hvilke grep NAV har tatt det det siste året for å bli gode nok til at vi kan åpne koden vår på en forsvarlig måte. Vi vil dele erfaringer fra å bygge en moderne utviklingsorganisasjon inne i en eksisterende organisasjon. Hva har vært lett, og hva har vært vanskelig? Hva har fungert, og hva har ikke fungert?NAV har "},{"id":"66","title":"Inside a hacker's mind","summary":"The aim of this talk is to introduce you to a few latest critical vulnerabilities through practical examples and code demos. The first half of the talk will cover the two most critical vulnerabilities found in platforms previously unfathomable, namely vulnerabilities in Apache Struts and Serverless Architectures with practical examples and demos of what can happen with the exploitation of these vulnerabilities. The second half will delve deeper into the Stored/Persistent XSS Zero-day flaw, a vulnerability that allowed hackers to compromise 70,000 websites in March 2019."},{"id":"67","title":"Wrapping and Securing REST APIs with GraphQL","summary":"Your frontend developers are pushing to get started with GraphQL, but you don't have the backend capacity to migrate your existing REST APIs to GraphQL? Or you want to have a GraphQL API next to your existing endpoints that are based on REST? In this talk, I'll show how to create a Node.js/Express server that wraps existing REST APIs into one single GraphQL endpoint, while also keeping security in mind."},{"id":"68","title":"Preparing for a future Microservices journey","summary":"How can a small team handle infrastructure complexities that come with Microservices and still deliver business and user value? The short answer to that could be to build your core domain - that differentiates you from your competitors - in-house and outsource undifferentiating commodities to utility suppliers. In this talk Susanne will use Wardley Maps to visualise how the value chain can evolve when getting infrastructure components handled by different options: Going from open source software to Kubernetes' container orchestration, to Istio's service mesh and to Serverless technologies"},{"id":"69","title":"To the Moon and Back: The Technical Parts","summary":"How do you put together a live performance which runs in a browser? Come and find out! Live JS talk you through the opening performance in detail and how they built software using javascript which runs in a browser, to create an audio visual spectacular. Using APIs such as Web Audio, Web MIDI and Canvas, as well as hardware, come and learn about the technical details behind performing live with javascript!"},{"id":"70","title":"Zero Trust & The Flaming Sword of Justice","summary":"Security breaches pervade the headlines. What was seen as a rare instance just 5 years ago now seems to occupy the daily news cycle. A lot of these data breaches are made possible due to missteps and misconfigurations. There are many security issues that are introduced into website authentication mechanisms that further compound the security issues in addition to enforcing bad behavior by the end users. Security debt is a real problem for the vast majority of organizations in the world today and the attackers will utilize this to their advantage."},{"id":"71","title":"The Life of a Packet Through Istio","summary":"Istio is a service mesh for Kubernetes that offers advanced networking features. It provides intelligent routing, resiliency, and security features, so that service authors don't have to keep re-implementing them. Istio is rapidly taking off and there are great introductory talks everywhere. However in this session, we will explore precisely how it does what it does, following one brave little packet in from the internet and back out again. This will give a great insight into Istio's full power, and its fascinating architecture."},{"id":"72","title":"GraphQL is Cool","summary":"summary"},{"id":"73","title":"GraphQL is Cool","summary":"summary"},{"id":"74","title":"GraphQL is Cool","summary":"summary"},{"id":"80","title":"GraphQL","summary":"will follow soon."}]}},[Content-Type:"application/json;charset=UTF-8", Transfer-Encoding:"chunked", Date:"Fri, 27 Mar 2020 05:54:05 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
